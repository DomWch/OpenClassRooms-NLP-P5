# Define the number of worker processes; recommended value is the number of cores that are being used by your server
# worker_processes  1;
# Define the file that will store the process ID of the main NGINX process
# pid        /var/run/nginx.pid;

# Define the parameters for a specific virtual host/server
server {
    # Define the server name, IP address, and/or port of the server
    listen 80;
    client_max_body_size 200m;
    include /etc/nginx/mime.types;
    add_header X-Content-Type-Options nosniff;
    # Define the specified charset to the “Content-Type” response header field
    charset utf-8;

    # Define the format of log messages.
    # log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                   '$status $body_bytes_sent "$http_referer" '
    #                   '"$http_user_agent" "$http_x_forwarded_for"';

    # Define the location of the log of access attempts to NGINX
    access_log  /var/log/nginx/access.log main;
    error_log  /var/log/nginx/error.log warn;
    
    # # Define the parameters to optimize the delivery of static content
    # sendfile        on;
    # tcp_nopush     on;
    # tcp_nodelay    on;

    keepalive_timeout  65; #Seconds

    location / {
        # Define the location of the proxy server to send the request to
        proxy_pass http://api:8000;

        # Redefine the header fields that NGINX sends to the upstream server
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # # Configure NGINX to reverse proxy HTTP requests to the upstream server (uWSGI server)
    # location /mlflow/ {
    #     # Define the location of the proxy server to send the request to
    #     proxy_pass http://mlflow:5000/; 

    #     # Redefine the header fields that NGINX sends to the upstream server
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # }
}